@import 'themes';
@import url("https://fonts.googleapis.com/css2?family=League+Spartan:wght@700&display=swap");
@mixin flexbox(
  $display: flex,
  $direction: row,
  $placeContent: null,
  $placeItems: null,
  $wrap: null,
  $shrink: null,
  $grow: null,
  $alignContent: null,
  $justifyContent: null,
  $alignItems: null,
  $justifyItems: null
) {
  display: $display;
  flex-direction: $direction;

  @if $placeContent == null {
    @if $alignContent {
      align-content: $alignContent;
    }
    @if $justifyContent {
      justify-content: $justifyContent;
    }
  } @else {
    place-content: $placeContent;
  }

  @if $placeItems == null {
    @if $alignItems {
      align-items: $alignItems;
    }
    @if $justifyItems {
      justify-items: $justifyItems;
    }
  } @else {
    place-items: $placeItems;
  }

  flex-wrap: $wrap;
  flex-shrink: $shrink;
  flex-grow: $grow;
}

*,
* > * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "League Spartan", sans-serif;
}
body {
  @include flexbox($alignItems: center, $justifyContent: center);
  min-height: 100vh;
  padding: 1.5rem;
  background-color: var(--main-bg);
  .calc-wrapper {
    max-width: 550px;
    .top-section {
      @include flexbox($alignItems: flex-end, $justifyContent: space-between);
      color: var(--top-section-color);
      .logo {
        font-size: 32px;
      }
      .themes {
        @include flexbox($alignItems: flex-end, $justifyContent: center);
        gap: 1.5rem;
        .themes-selection {
          width: 75px;
          .labels {
            @include flexbox($justifyContent: space-around);
            line-height: 1.8;
            padding: 0 2px;
            font-size: 12px;
          }
          .inputs {
            @include flexbox($alignItems: center, $justifyContent: space-evenly);
            position: relative;
            height: 28px;
            border-radius: 20px;
            background-color: var(--inputs-bg-keypad-bg);
            p {
              position: absolute;
              left: -75px;
              letter-spacing: 1.5px;
              font-size: 12px;
            }
            input {
              appearance: none;
              width: 1rem;
              height: 1rem;
              border-radius: 50%;
              cursor: pointer;
              transition: all 0.3s;
              &:checked {
                background-color: var(--key-bg-toggle-two);
              }
              &:hover {
                filter: brightness(1.75);
              }
            }
          }
        }
      }
    }
    .output {
      @include flexbox($alignItems: center, $justifyContent: flex-end, $wrap: nowrap);
      border-radius: 12px;
      margin: 2rem 0 1.5rem 0;
      font-size: clamp(3.625rem, 3.4049rem + 0.939vw, 4.25rem);
      padding: 2.25rem 2rem 1.75rem 2rem;
      overflow: hidden;
      color: var(--top-section-color);
      background-color: var(--output-bg);
      [data-current-operation] {

      }
      [data-previous-operation] {
      }
    }
    .buttons {
      border-radius: 12px;
      display: grid;
      grid-template-columns: repeat(4, minmax(25px, 100px));
      grid-template-rows: repeat(5, minmax(25px, 60px));
      gap: 1.5rem;
      padding: 2rem;
      background-color: var(--inputs-bg-keypad-bg);
      button {
        border-radius: 12px;
        border: none;
        cursor: pointer;
        font-size: clamp(1.875rem, 1.743rem + 0.5634vw, 2.25rem);
      }
      [data-number],
      [data-operator] {
        color: var(--buttons);
        background-color: var(--key-bg-three);
        -webkit-box-shadow: 0px 4px 0px 0px var(--key-shadow-three);
        -moz-box-shadow: 0px 4px 0px 0px var(--key-shadow-three);
        box-shadow: 0px 4px 0px 0px var(--key-shadow-three);
        &:hover {
          background-color: var(--active-buttons-bg);
        }
      }
      :not([data-number], [data-operator]) {
        font-size: clamp(1.1875rem, 1.0775rem + 0.4695vw, 1.5rem);
        color: var(--white);
        &:hover {
          filter: brightness(1.5);
        }
      }
      [data-delete],
      [data-reset] {
        background-color: var(--key-bg-one);
        -webkit-box-shadow: 0px 4px 0px 0px var(--key-shadow-one);
        -moz-box-shadow: 0px 4px 0px 0px var(--key-shadow-one);
        box-shadow: 0px 4px 0px 0px var(--key-shadow-one);
      }
      [data-equals] {
        color: var(--equals);
        background-color: var(--key-bg-toggle-two);
        -webkit-box-shadow: 0px 4px 0px 0px var(--key-shadow-two);
        -moz-box-shadow: 0px 4px 0px 0px var(--key-shadow-two);
        box-shadow: 0px 4px 0px 0px var(--key-shadow-two);
      }
      .span-two {
        grid-column: span 2;
        width: unset;
      }
    }
  }
}
@media only screen and (max-width: 600px) {
  body {
    .calc-wrapper {
      .top-section {
        .themes {
          gap: 1.5rem;
        }
      }
      .output {
        padding: 1.5rem 1.5rem 0.75rem 1.5rem;
      }
      .buttons {
        gap: 1rem 0.75rem;
        padding: 1.25rem;
        button {
          border-radius: 4px;
        }
      }
    }
  }
}
